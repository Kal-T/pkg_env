const navItems = ['Job arranger manager','Admin','Object management','Job execution management','Job execution result','General setting','Lock management','Export and import','Log out']
const objectMItems = ['Calendar','Schedule','Jobnet']
const calendarItems = ['Public calendar','Private calendar','Public filter','Private filter']
const scheduleItems = ['Public schedule','Private schedule']
const jobnetItems = ['Public jobnet','Private jobnet']
const exportImportItems = ['Export all','Import']
const tableContent = [['undefined','Object management','Function'],['undefined','Calendar','<a tabindex=\"1\" href=\"/jobarranger/object-list/calendar/public\">Public calendar</a>','<li>Create new object</li><li>List each object for</li><div style=\"margin-left: 15px;\">edit <br>delete<br>enable/disable<br>export</div><br>']]

const url = "http://10.1.9.30/jobarranger/"

describe('UI test', () => {
  beforeEach(() => {
    cy.visit(url+"home")
    cy.get('#username').type('Admin')
    cy.get('#password').type('zabbix')
    cy.get('.ant-input-suffix').click() // show password

    cy.get('.ant-btn').click()

    cy.url().should('include', '/jobarranger/home') //check url
  })

  it('Check Navbar items', () => {
    
    //check the nav bar items
    cy.get('.ant-menu-item').should('have.length',7)
    cy.get('.ant-menu-submenu').should('have.length',2)
    cy.get('.ant-menu-title-content').each(($match,index) => {
      cy.wrap($match).invoke('text').should('eq', navItems[index])
    })

    //check for Object management sub menus
    cy.get('.ant-menu-item:nth-child(1)').click()
    cy.get(':nth-child(3) > .ant-menu-submenu-title').click()
    cy.get('.ant-menu:nth-child(2)>*>div>.ant-menu-title-content').should('have.length',objectMItems.length).each(($match,index) => {
      cy.get($match).invoke('text').should('eq',objectMItems[index])
    })

    //check for Calendar sub menus
    cy.get('.ant-menu:nth-child(2)>*:nth-child(1)').click()
    cy.get('.ant-menu:nth-child(2)>*:nth-child(1)>ul>li>.ant-menu-title-content').should('have.length',calendarItems.length).each(($match,index) => {
      cy.get($match).invoke('text').should('eq',calendarItems[index])
    })

    //check for Schedule sub menus
    cy.get(':nth-child(1) > .ant-menu-submenu-title > .ant-menu-title-content').click()
    cy.get(':nth-child(2) > .ant-menu-submenu-title > .ant-menu-title-content').click()
    cy.get('.ant-menu:nth-child(2)>*:nth-child(2)>ul>li>.ant-menu-title-content').should('have.length',scheduleItems.length).each(($match,index) => {
      cy.get($match).invoke('text').should('eq',scheduleItems[index])
    })

    //check for Jobnet sub menus
    cy.get(':nth-child(2) > .ant-menu-submenu-title > .ant-menu-title-content').click()
    cy.get(':nth-child(3) > .ant-menu-submenu-title > .ant-menu-title-content').eq(1).click()
    cy.get('.ant-menu-submenu-open').eq(1).within(
      ()=>{
        cy.get('li').should('have.length',jobnetItems.length).each(($match,index) => {
          cy.get($match).invoke('text').should('eq',jobnetItems[index])
        })
      }
    )

    cy.get(':nth-child(3) > .ant-menu-submenu-title > .ant-menu-title-content').eq(1).click() //close Jobnet sub-menu
    cy.get('.ant-menu-submenu-open').click(10,10) //close object management menu

    cy.get(':nth-child(8)').eq(1).click()
    cy.get(':nth-child(8)').eq(1).within(
      ()=>{
        cy.get('li').should('have.length',exportImportItems.length).each(($match,index) => {
          cy.get($match).invoke('text').should('eq',exportImportItems[index])
        })
      }
    )
    cy.get(':nth-child(8)').eq(1).click(10,10) //close Export and import
  })

  it('Check Header changes', () => {
    cy.get('.ant-menu-item:nth-child(1)').click()
    cy.get(':nth-child(3) > .ant-menu-submenu-title').click()

    //check calander links
    cy.get('.ant-menu:nth-child(2)>*:nth-child(1)').click()
    cy.get('.ant-menu:nth-child(2)>*:nth-child(1)>ul>li>.ant-menu-title-content').should('have.length',calendarItems.length).each(($match,index) => {
      cy.get($match).click().invoke('text').should('eq',calendarItems[index])
      checkHeader(calendarItems[index])
    })
    cy.get('.ant-menu-submenu-open').eq(1).click(10,10)

    //check schedule links
    cy.get(':nth-child(2) > .ant-menu-submenu-title > .ant-menu-title-content').click()
    cy.get('.ant-menu:nth-child(2)>*:nth-child(2)>ul>li>.ant-menu-title-content').should('have.length',scheduleItems.length).each(($match,index) => {
      cy.get($match).click().invoke('text').should('eq',scheduleItems[index])
      checkHeader(scheduleItems[index])
    })
    cy.get('.ant-menu-submenu-open').eq(1).click(100,10)

    //check jobnet links
    cy.get(':nth-child(3) > .ant-menu-submenu-title > .ant-menu-title-content').eq(1).click()
    cy.get('.ant-menu:nth-child(2)>*:nth-child(3)>ul>li>.ant-menu-title-content').should('have.length',jobnetItems.length).each(($match,index) => {
      cy.get($match).click().invoke('text').should('eq',jobnetItems[index])
      checkHeader(jobnetItems[index])
    })
    cy.get('.ant-menu-submenu-open').eq(1).click(100,10)

    //check job execution management
    cy.get(':nth-child(3) > .ant-menu-submenu-title').eq(0).click()

    cy.get(':nth-child(4)').eq(2).click()
    checkHeader('Job execution management')
    
    cy.get(':nth-child(6)>.ant-menu-title-content').click()
    checkHeader('General setting')

    cy.get(':nth-child(7)').eq(1).click()
    checkHeader('Lock management')
  })

  it('Check Table contents of Home screen',()=>{
    cy.get('td').eq(0).invoke('text').should('eq','')
    cy.get('td').eq(1).invoke('text').should('eq','Object management')
    cy.get('td').eq(2).invoke('text').should('eq','Function')
    cy.get('td').eq(3).invoke('text').should('eq','')
    cy.get('td').eq(4).invoke('text').should('eq',' Calendar ')
    cy.get('td').eq(5).invoke('text').should('eq','')
    cy.get('td').eq(6).invoke('text').should('eq','Public calendar')
    cy.get('td').eq(7).within(()=>{
      cy.get('li').eq(0).invoke('text').should('eq','Create new object')
      cy.get('li').eq(1).invoke('text').should('eq','List each object for')
      cy.get('div').invoke('text').should('eq','edit deleteenable/disableexport')
    })
  })

})

//this function is used to check the header (Check Header changes) when nav links are clicked
function checkHeader(content){
  cy.get('.ant-breadcrumb-link > a').invoke('text').should('eq','Home')
  cy.get('.ant-breadcrumb-link > a').should("have.attr", "href", "/jobarranger");
  cy.get('.ant-breadcrumb-link > span').invoke('text').should('eq',content)
}
